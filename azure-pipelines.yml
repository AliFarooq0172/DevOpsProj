stages:
- stage: Build #BUILD STAGE
  jobs:
  - job: BuildJob
    displayName: 'Build'
    steps:
    - task: Git@2
      inputs:
        repository: 'https://github.com/AliFarooq0172/your-repo'
        clean: true
        fetchDepth: 1
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/project_files'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/project_files'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/html_artifact.zip'
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'html_artifact'
        targetPath: '$(Build.ArtifactStagingDirectory)/html_artifact.zip'
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'html_artifact'
        pathToPublish: '$(Build.ArtifactStagingDirectory)/html_artifact.zip'
        publishLocation: 'pipeline'

- stage: Test # SELENIUM TESTING STAGE
  jobs:
  - job: RunSeleniumTests
    displayName: 'Run Selenium Tests'
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        packageType: 'sdk'
        version: '3.x'
    - task: VSTest@2
      displayName: 'Run Selenium Unit Tests'
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **/*UnitTests.dll
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        runInParallel: true
        codeCoverageEnabled: true
  - deployment: DeployToStaging
    displayName: 'Deploy to Staging Environment'
    environment: 'Staging'
    dependsOn: RunSeleniumTests
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'html_artifact'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: PowerShell@2
            displayName: 'Deploy to Staging Environment'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host 'Deploying to Staging environment...'

                # Copy the HTML and CSS files to the web server's document root
                Copy-Item -Path $(System.ArtifactsDirectory)/html_artifact/project_files -Destination C:\inetpub\wwwroot -Recurse

                # Configure the web server to serve the HTML and CSS files
                Add-Content C:\inetpub\wwwroot\web.config @'
                <system.webServer>
                  <staticContent>
                    <mimeMap fileExtension=".css" mimeType="text/css" />
                  </staticContent>
                </system.webServer>
                '@

                # Restart the web server to pick up the changes
                Restart-Service W3SVC

- stage: Deploy #DEPLOY STAGE
  jobs:
  - deployment: DeployToProduction
    displayName: 'Deploy to Production Environment'
    environment: 'Production'
    dependsOn: DeployToStaging
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'html_artifact'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: PowerShell@2
            displayName: 'Deploy to Production Environment'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host 'Deploying to Production environment...'
                
                # Copy the HTML and CSS files to the web server's document root
                Copy-Item -Path $(System.ArtifactsDirectory)/html_artifact/project_files -Destination C:\inetpub\wwwroot -Recurse

                # Configure the web server to serve the HTML and CSS files
                Add-Content C:\inetpub\wwwroot\web.config @'
                <system.webServer>
                  <staticContent>
                    <mimeMap fileExtension=".css" mimeType="text/css" />
                  </staticContent>
                </system.webServer>
                '@

                # Restart the web server to pick up the changes
                Restart-Service W3SVC